server {
  listen 80 default_server;
  listen [::]:80 default_server;

  root /var/www/html;

  index index.html index.htm index.nginx-debian.html;

  server_name _;

  location / {
    try_files $uri $uri/ =404;
  }
}

server {
  server_name VPN_SERVER_NAME;
  server_tokens on;
  client_max_body_size 10M;
  error_log /var/log/nginx/error.log;

  location /favicon.ico {
    root /home/static;
  }

  location /static {
    sendfile           on;
    sendfile_max_chunk 1m;
    alias /home/static;
  }

  location / {
    proxy_pass http://127.0.0.1:8000/;
    proxy_http_version  1.1;
    proxy_set_header    Upgrade         $http_upgrade;
    proxy_set_header    Connection      "upgrade";
    proxy_set_header    Host            $host;
    proxy_set_header    X-Real-IP       $remote_addr;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header    X-Client-Verify SUCCESS;
    proxy_set_header    X-Client-DN     $ssl_client_s_dn;
    proxy_set_header    X-SSL-Subject   $ssl_client_s_dn;
    proxy_set_header    X-SSL-Issuer    $ssl_client_i_dn;
    proxy_read_timeout  1800;
    proxy_connect_timeout 1800;
    proxy_buffering     off;
    proxy_set_header    X-Frame-Options SAMEORIGIN;
    proxy_set_header    X-Content-Type-Options nosniff;
    proxy_set_header    Content-Type     application/json;
    proxy_set_header    Referrer-Policy same-origin;
    proxy_set_header    Permissions-Policy "geolocation 'none'; camera 'none';";
  }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/VPN_SERVER_NAME/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/VPN_SERVER_NAME/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    server_name www.VPN_SERVER_NAME;
    server_tokens on;
    client_max_body_size 10M;
    error_log /var/log/nginx/access.log;
    return 302 https://VPN_SERVER_NAME$request_uri;
}
# server {
#     server_name www.VPN_SERVER_NAME;
#     server_tokens on;
#     client_max_body_size 10M;
#     listen  443 ssl default_server;
#     error_log /var/log/nginx/access.log;
#     return 302 https://VPN_SERVER_NAME$request_uri;
# }

server {
    if ($host = VPN_SERVER_NAME) {
      return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name VPN_SERVER_NAME;
    listen 80;
    return 404; # managed by Certbot

}

server {
    if ($host = VPN_SERVER_NAME) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  server_name VPN_SERVER_NAME;
    listen 80;
    return 404; # managed by Certbot


}
